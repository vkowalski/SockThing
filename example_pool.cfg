
network=prodnet
pay_to_address=1HorriBLeWypTH3YqEAn8J5LweNJHrZ7bo

port=3333

bitcoind_username=bitcoin
bitcoind_password=lobster
bitcoind_host=localhost
bitcoind_port=8332

# Optional to use this feature, but speeds up detection
# of new blocks.
# To use, compile udpping in 'cpp' directory:
#   cd cpp
#   make udpping
# Then run your bitcoind like this:
#   bitcoind  -blocknotify="PATH/udpping localhost 19191"
notify_port=19191

share_db_driver=com.mysql.jdbc.Driver
share_db_uri=jdbc:mysql://localhost/sharedb
share_db_username=someuser
share_db_password=lobsterdb

#
# Use Amazon Messaging (SQS and SNS) to decouple workers submitting work
# from your database layer.  If used, work records are sent through SNS to SQS
# and then read and put into your database.  That way, work is still recorded
# and ends up saved in SQS if your database is down or slow for a time.
#
saver_messaging_enabled=yes

# An SNS topic (ideally near by) which takes messages for work records
# Note: region is determined from topic arn and doesn't need to be configured
saver_messaging_topic_arn=arn:aws:sns:us-west-2:123456789000:shareprocessing
saver_messaging_aws_key=AWS_KEY_ID
saver_messaging_aws_secret=SECRET_KEY

#
# SQS queue and region which must be subscribed to the above SNS topic.
# Does not need to be the same region as the SNS topic.
# See http://hhtt.1209k.com/ha.php for an example.
#
saver_messaging_sqs_region=us-west-2
saver_messaging_sqs_queue_url=https://sqs.us-west-2.amazonaws.com/123456789000/shareprocessing
saver_messaging_read_threads=1

#
# Where to save metrics
#
metrics_enabled=true
metrics_aws_region=us-west-2
metrics_aws_key=AWS_KEY_ID
metrics_aws_secret=SECRET_KEY

# Used for some metrics
instance_id=node_a

# Text to put in each coinbase TX
coinbase_text=bug_bear_pool

# Use optional database of extra text to put in coinbase transactions
witty_remarks_enalbed=false
